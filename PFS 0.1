#!/usr/bin/env python3
import os
import subprocess
import shutil
print('Imported all necessary files!')
print('Version 0.2 Needs loop and dictionaries')
print('Developed by JGabT')

#reorg_dir is where the path of the downloads folder is
#for this version you need to put the py program before the
#Downloads folder.
reorg_dir = "Desktop"
exclude = () # for example
remove_emptyfolders = True

def dir_names(ext):
    extensions = [
        [["jpeg", "jpg", "png", "gif", "ai", "bmp", "ico", "ps", "psd", "svg", "tif", "tiff"], "Images"],
        [["mov", "mp4", "avix", "3g2", "3gp", "avi", "flv", "h264", "m4v", "mkv", "m4v", "mpg", "mpeg", "rm", "swf", "vob", "wmv", "mts"], "Videos"],
        [["bin", "dmg", "iso", "toast", "vcd"], "Disc and Media"],
        [["apk", "bat", "bin", "cgi", "pl", "com", "exe", "gadget", "jar", "py", "wsf"], "Executables"],
        [["fnt", "fon", "otf", "ttf"], "Fonts"],
        [["asp", "aspx", "cer", "cfm", "pl", "css", "htm", "html", "js", "jsp", "part", "php", "rss", "xhtml"], "Internet Related"],
        [["key", "odp", "pps", "ppt", "pptx"], "Presentations"],
        [["ods", "xlr", "xls", "xlsx"],"Spreadsheets"],
        [["mp3", "wav", "aif", "cda", "mpa", "ogg", "wma", "wpl"], "Audio"],
        [["db", "csv", "dat", "dbf", "log", "mdb", "sav", "sql", "tar", "xml", "whl"], "Data and Database"],
        [["zip", "7zip", "rar", "arj", "pkg", "rpm", "tar""gz", "z"], "Compressed Files"],
        [["doc", "docx", "odt", "pdf", "rtf", "tex", "wks", "wps", "wpd", "txt"], "Word and Text"],
        [["dll"], "DLL(s)"],
        [["bak"],  "Backups"],
        [["Cab"], "Windows Cabinet"],
        [["torrent"], "Torrent"],
        [["m3u8"], "m3u8"],
        [["dwfx"], "Autodesk Models"],

    ]
    match = [item[1] for item in extensions if ext.lower() in item[0]]
    return match[0] if match else "extension_not_found"

print('Files Scanned!')

for root, dirs, files in os.walk(reorg_dir):
    for name in files:
        subject = root+"/"+name
        if name.startswith("."):
            extension = "hidden_files"
        elif not "." in name:
            extension = "without_extension"
        else:
            extension = dir_names(name[name.rfind(".")+1:]) # edited line
        if not extension in exclude:
            new_dir = reorg_dir+"/"+extension
            if not os.path.exists(new_dir):
                os.mkdir(new_dir)
            shutil.move(subject, new_dir+"/"+name)
print('Files Reorganized!')

def cleanup():
    filelist = []
    for root, dirs, files in os.walk(reorg_dir):
        for name in files:
            filelist.append(root+"/"+name)
    directories = [item[0] for item in os.walk(reorg_dir)]
    for dr in directories:
        matches = [item for item in filelist if dr in item]
        if len(matches) == 0:
            try:
                shutil.rmtree(dr)
            except FileNotFoundError:
                pass
print('Cleanup Complete!')
if remove_emptyfolders == True:
    cleanup()
